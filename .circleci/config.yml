version: 2
jobs:
  build:
    docker:
      - image: themattrix/tox

    steps:
      - checkout

      - restore_cache:
          key: tox-{{ .Branch }}-{{ checksum "tox.ini" }}
      - run:
          name: Run tests
          command: tox
      - save_cache:
          key: tox-{{ .Branch }}-{{ checksum "tox.ini" }}
          paths:
            - "/root/project/.tox"

      - run:
          name: Coverage
          command: |
            pip install codecov
            tox -e coverage-report
            codecov

  flake8:
    docker:
      - image: circleci/python:3-stretch

    steps:
      - checkout

      - restore_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements_flake8.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_flake8.txt
      - save_cache:
          key: venv-{{ .Branch }}-{{ checksum "requirements_flake8.txt" }}
          paths:
            - "venv"

      - run:
          name: Run Flake8 checks
          command: |
            . venv/bin/activate
            flake8 admin_ip_restrictor

  deploy:
    docker:
      - image: circleci/python:3-stretch

    steps:
      - checkout
      - run:
          name: Push to PYPI
          command: |
            sudo pip install twine wheel
            make publish


workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build
      - flake8
      - deploy:
          requires:
            - build
            - flake8
          filters:
            branches:
              only: master
